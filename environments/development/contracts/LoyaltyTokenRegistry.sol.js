"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var LoyaltyTokenRegistry = (function (_Pudding) {
    _inherits(LoyaltyTokenRegistry, _Pudding);

    function LoyaltyTokenRegistry() {
      _classCallCheck(this, LoyaltyTokenRegistry);

      _get(Object.getPrototypeOf(LoyaltyTokenRegistry.prototype), "constructor", this).apply(this, arguments);
    }

    return LoyaltyTokenRegistry;
  })(Pudding);

  ;

  // Set up specific data for this class.
  LoyaltyTokenRegistry.abi = [{ "constant": false, "inputs": [{ "name": "_token", "type": "address" }], "name": "registerToken", "outputs": [{ "name": "_success", "type": "bool" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_token", "type": "address" }], "name": "getTokenNameSymbol", "outputs": [{ "name": "_tokenName", "type": "string" }, { "name": "_tokenSymbol", "type": "string" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_token", "type": "address" }], "name": "getTokenContent", "outputs": [{ "name": "_tokenContent", "type": "bytes32" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_token", "type": "address" }, { "name": "_tokenName", "type": "string" }, { "name": "_tokenSymbol", "type": "string" }], "name": "setTokenNameSymbol", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "_token", "type": "address" }, { "name": "_tokenContent", "type": "bytes32" }], "name": "setTokenContent", "outputs": [], "type": "function" }, { "constant": false, "inputs": [], "name": "getTokens", "outputs": [{ "name": "_tokenList", "type": "address[32]" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "address" }], "name": "registryRecordsInfo", "outputs": [{ "name": "owner", "type": "address" }, { "name": "tokenId", "type": "uint256" }, { "name": "tokenName", "type": "string" }, { "name": "tokenSymbol", "type": "string" }, { "name": "tokenContent", "type": "bytes32" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "registryRecords", "outputs": [{ "name": "owner", "type": "address" }, { "name": "tokenId", "type": "uint256" }, { "name": "tokenName", "type": "string" }, { "name": "tokenSymbol", "type": "string" }, { "name": "tokenContent", "type": "bytes32" }], "type": "function" }, { "inputs": [], "type": "constructor" }];
  LoyaltyTokenRegistry.binary = "6060604052600080556108c3806100166000396000f36060604052361561006c5760e060020a600035046309824a80811461006e5780635e6ef248146101705780635f83ca5c146101fe5780638e73d4f7146102315780638f15c4d314610334578063aa6ca8081461035d578063e50d4d5e14610388578063ed1917ca146103c4575b005b61021f600435600160a060020a03811660009081526001602081815260408320805473ffffffffffffffffffffffffffffffffffffffff19163317815583548301928101929092558254600291811015610002576005020182508054825473ffffffffffffffffffffffffffffffffffffffff19909116600160a060020a0391909116178155600182810154828201556002838101805484830180546000828152602090819020929682811615610100908102600019908101909416889004601f9081019390930485019791861615029092019093160492909183901061061057805485555b5061064c9291505b808211156106b1576000815560010161015c565b6104046004356040805160208181018352600080835283518083018552818152600160a060020a03861682526001808452918590206002908101805487519481161561010002600019011691909104601f810185900485028401850190965285835293949093919283018282801561080f5780601f106107e45761010080835404028352916020019161080f565b600160a060020a036004803591909116600090815260016020526040902001545b60408051918252519081900360200190f35b60408051602060248035600481810135601f810185900485028601850190965285855261006c9581359591946044949293909201918190840183828082843750506040805160209735808a0135601f81018a90048a0283018a019093528282529698976064979196506024919091019450909250829150840183828082843750949650505050505050816001600050600085600160a060020a031681526020019081526020016000206000506002016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061070d57805160ff19168380011785555b5061073d92915061015c565b600160a060020a036004803591909116600090815260016020526040902060243591015561006c565b6104d1610400604051908101604052806020905b600081526020019060019003908161037157505090565b6001602081905260048035600090815260409020805492810154918101546104eb93600160a060020a0316929160028101916003919091019085565b6104eb6004356002816020811015610002575060059182029081015460038201546006830154600160a060020a0392909216939092600481019291019085565b6040518080602001806020018381038352858181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156104685780820380516001836020036101000a031916815260200191505b508381038252848181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156104c15780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b60405180826104008083818460006004606ff15093505050f35b60408051600160a060020a0387168152602081018690526080810183905260a09181018281528554600260018216156101000260001901909116049282018390529091606083019060c0840190879080156105875780601f1061055c57610100808354040283529160200191610587565b820191906000526020600020905b81548152906001019060200180831161056a57829003601f168201915b5050838103825285546002600182161561010002600019019091160480825260209190910190869080156105fc5780601f106105d1576101008083540402835291602001916105fc565b820191906000526020600020905b8154815290600101906020018083116105df57829003601f168201915b505097505050505050505060405180910390f35b8280016001018555821561015457600052602060002091601f016020900482015b82811115610154578254825591600101919060010190610631565b505060038201600050816003016000509080546001816001161561010002031660029004828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106b557805485555b506106f192915061015c565b5090565b828001600101855582156106a557600052602060002091601f016020900482015b828111156106a55782548255916001019190600101906106d6565b5050600491820154910155505060008054600190810190915590565b82800160010185558215610328579182015b8281111561032857825182600050559160200191906001019061071f565b5050600160a060020a0383166000908152600160208181526040832060030180548551828652948390209194600294821615610100026000190190911693909304601f908101839004820193928601908390106107ad57805160ff19168380011785555b506107dd92915061015c565b828001600101855582156107a1579182015b828111156107a15782518260005055916020019190600101906107bf565b5050505050565b820191906000526020600020905b8154815290600101906020018083116107f257829003601f168201915b50505050600160a060020a03851660009081526001602081815260409283902060030180548451600294821615610100026000190190911693909304601f8101839004830284018301909452838352949650909392508301828280156108b65780601f1061088b576101008083540402835291602001916108b6565b820191906000526020600020905b81548152906001019060200180831161089957829003601f168201915b509394505050505091509156";

  if ("0x66548b4ad6d6be74bc2dbb53ef8c4df0f7b671b3" != "") {
    LoyaltyTokenRegistry.address = "0x66548b4ad6d6be74bc2dbb53ef8c4df0f7b671b3";

    // Backward compatibility; Deprecated.
    LoyaltyTokenRegistry.deployed_address = "0x66548b4ad6d6be74bc2dbb53ef8c4df0f7b671b3";
  }

  LoyaltyTokenRegistry.generated_with = "1.0.3";
  LoyaltyTokenRegistry.contract_name = "LoyaltyTokenRegistry";

  return LoyaltyTokenRegistry;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.LoyaltyTokenRegistry = factory;
}